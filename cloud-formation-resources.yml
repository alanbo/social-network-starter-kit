Parameters: 
  ImageRepoName: 
    Type: String
    Description: Provide docker image repo name.
  ImageUserName:
    Type: String
    Description: Docker user name.
  GithubRepoUrl: 
    Type: String
    Description: Github repo link.
  DockerHubPasswordArn:
    Type: String
    Description: SSM Arn of Password to access docker hub.


Resources:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodeBuildRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole

      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents

                Resource:
                  - '*'

              - Effect: Allow
                Action:
                  - ssm:GetParameters
                Resource:
                 - Ref: DockerHubPasswordArn

              # - Effect: Allow
              #   Action:
              #     - "s3:GetObject"
              #     - "s3:GetObjectVersion"
              #     - "s3:GetBucketVersioning"
              #     - "s3:PutObject"

              #   Resource: 
              #     - !GetAtt PipelineBucket.Arn
              #     - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]

              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"

                Resource: 
                  - !GetAtt DeployBucket.Arn
                  - !Join ['', [!GetAtt DeployBucket.Arn, "/*"]]

              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "cloudfront:CreateInvalidation"

                Resource:
                  - "*"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts: 
        Type: NO_ARTIFACTS
      Description: String
      Environment: 
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:2.0
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: true
        EnvironmentVariables:
            - Name: IMAGE_REPO_NAME
              Value:
                Ref: ImageRepoName
            - Name: IMAGE_USER_NAME
              Value:
                Ref: ImageUserName
            - Name: DEPLOY_BUCKET
              Value:
                Ref: DeployBucket

      ServiceRole: CodeBuildRole
      Source: 
        Type: GITHUB
        Location:
          Ref: GithubRepoUrl 

      TimeoutInMinutes: 10
    DependsOn: CodeBuildRole

  DeployBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html

  Distribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Origins:
          - 
            # Use the DeployBucket as the CDN origin
            DomainName: !GetAtt DeployBucket.DomainName
            Id: !Ref DeployBucket
            S3OriginConfig:
              OriginAccessIdentity: ''
        DefaultRootObject: index.html
        Enabled: true
        # Configure the caching behavior for our CDN
        DefaultCacheBehavior: 
          MinTTL: 86400  # 1 day
          MaxTTL: 31536000  # 1 year
          ForwardedValues: 
            QueryString: true
          TargetOriginId: !Ref DeployBucket
          ViewerProtocolPolicy: "redirect-to-https"   # we want to force HTTPS
